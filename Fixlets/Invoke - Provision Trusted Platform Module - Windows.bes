<?xml version="1.0" encoding="UTF-8"?>

<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Fixlet>
		<Title>Invoke - Provision Trusted Platform Module - Windows</Title>
		<Description><![CDATA[<P>Provisions the trusted platform module on the device. </P>]]></Description>
		<Relevance>windows of operating system</Relevance>
		<Relevance>exists selects "* from Win32_Tpm" of wmis "root\CIMv2\Security\MicrosoftTpm"</Relevance>
		<Relevance>(not boolean value of selects "IsActivated_InitialValue from Win32_Tpm" of wmis "root\CIMv2\Security\MicrosoftTpm") or (not boolean value of selects "IsEnabled_InitialValue from Win32_Tpm" of wmis "root\CIMv2\Security\MicrosoftTpm") or (not boolean value of selects "IsOwned_InitialValue from Win32_Tpm" of wmis "root\CIMv2\Security\MicrosoftTpm")</Relevance>
		<Category>Disk Encryption</Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2016-04-29</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<Domain>BESC</Domain>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to provision the trusted platform module, set a random password on TPM ownership, and backup the password to the _BESData folder.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[// Enter your action script here

parameter "PowerShellExe"="{ pathname of file ((it as string) of value "Path" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry) }"

parameter "Storage"="{pathname of folder "__Global" of data folder of client}\Bitlocker"

folder create "{parameter "Storage"}"

createfile until _end_
param (
    $OutFolder = "."
)

import-module Bitlocker

$guid = [guid]::NewGuid().Guid

# If we are running on a version newer than Windows 7  use the new TPM cmdlets
if ([Environment]::OSVersion.Version -gt (new-object 'Version' 6,1)) {{
	Enable-TpmAutoProvisioning
	Set-TpmOwnerAuth -NewOwnerAuthorization "$GUID"
} else {{ # If we are running on Windows 7 use the old manage-bde method
	manage-bde -tpm -turnon
	manage-bde -tpm -takeownership "$GUID"
}

$GUID >> "$OutFolder\TPMOwnerAuthorization.txt"

_end_

move __createfile powershell.ps1

waithidden "{parameter "PowershellExe"}" -ExecutionPolicy Bypass -File powershell.ps1 -OutFolder "{parameter "Storage"}"

action requires restart]]></ActionScript>
		</Action>
		<Action ID="Action3">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink><![CDATA[ to provision the trusted platform module and&nbsp;set a password on TPM ownership.]]></PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">// Enter your action script here

parameter "PowerShellExe"="{ pathname of file ((it as string) of value "Path" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry) }"

parameter "Storage"="{pathname of folder "__Global" of data folder of client}\Bitlocker"

folder create "{parameter "Storage"}"

createfile until _end_
param (
    $OutFolder = "."
)

import-module Bitlocker

$guid = [guid]::NewGuid().Guid

# If we are running on a version newer than Windows 7  use the new TPM cmdlets
if ([Environment]::OSVersion.Version -gt (new-object 'Version' 6,1)) {{
	Enable-TpmAutoProvisioning
	Set-TpmOwnerAuth -NewOwnerAuthorization "$GUID"
} else {{ # If we are running on Windows 7 use the old manage-bde method
	manage-bde -tpm -turnon
	manage-bde -tpm -takeownership "$GUID"
}

_end_

move __createfile powershell.ps1

waithidden "{parameter "PowershellExe"}" -ExecutionPolicy Bypass -File powershell.ps1 -OutFolder "{parameter "Storage"}"

action requires restart</ActionScript>
		</Action>
		<Action ID="Action2">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to provision the trusted platform module</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">// Enter your action script here

createfile until _end_

import-module Bitlocker

$guid = [guid]::NewGuid().Guid

# If we are running on a version newer than Windows 7  use the new TPM cmdlets
if ([Environment]::OSVersion.Version -gt (new-object 'Version' 6,1)) {{
	Enable-TpmAutoProvisioning
} else {{ # If we are running on Windows 7 use the old manage-bde method
	manage-bde -tpm -turnon
}

_end_

move __createfile powershell.ps1

waithidden { pathname of file ((it as string) of value "Path" of key "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell" of native registry) } -ExecutionPolicy Bypass -File powershell.ps1

action requires restart</ActionScript>
		</Action>
	</Fixlet>
</BES>
